name: Build Electron App for Windows

on:
  push:
    branches:
      - main # 当代码推送到 main 分支时触发
  # pull_request: # 如果你只希望在 push 到 main 时创建 Release，可以注释掉这一行和下面的 branches
  #   branches:
  #     - main

permissions: # 👈 新增这一行
  contents: write # 👈 新增这一行，赋予写入内容的权限

jobs: # 👈 jobs: 这一行不要动，permissions: 必须在它上方
  build-windows:
    runs-on: windows-latest # 只在最新的 Windows 虚拟机上运行

    steps:
    - name: Checkout code
      uses: actions/checkout@v4 # 获取你的项目代码

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22.x # 使用 Node.js 22.x
        cache: 'npm' # 缓存 npm 依赖，加快安装速度

    - name: Install dependencies
      run: npm install # 安装项目所需的所有依赖

    - name: Make Electron app (Windows)
      run: npm run make # 执行 package.json 中定义的 "make" 脚本

    - name: Upload Windows installer artifact
      uses: actions/upload-artifact@v4
      with:
        name: test-app-windows # 上传产物的名称
        path: out/make/* # Electron Forge 默认会将 make 后的产物放在 out/make 目录下

  release:
    needs: build-windows
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload Release Asset (Windows Installer)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/artifacts/test-app-windows/*.exe
        asset_name: YourAppName-Windows-Installer.exe
        asset_content_type: application/octet-stream