name: Build Electron App for Windows

on:
  push:
    branches:
      - main
  # pull_request:
  #   branches:
  #     - main

permissions:
  contents: write # 赋予写入内容的权限

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22.x
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Make Electron app (Windows)
      run: npm run make

    - name: Upload Windows installer artifact
      uses: actions/upload-artifact@v4
      with:
        name: test-app-windows
        path: out/make/*

  release:
    needs: build-windows
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts # 下载到 'artifacts' 目录

    - name: List downloaded files for debugging # 👈 新增这一步，用于调试，你可以看看实际下载了什么
      run: |
        ls -R artifacts/test-app-windows/
      shell: bash # 在 Ubuntu 上默认使用 bash

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload Release Asset (Windows Installer)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        # ⚠️ 将 asset_path 修改为更精确的路径
        # asset_path: ${{ github.workspace }}/artifacts/test-app-windows/*.exe # 之前的通配符
        asset_path: ${{ github.workspace }}/artifacts/test-app-windows/squirrel.windows/x64/test-Setup-${{ github.run_number }}.exe # 👈 假设你的应用名是 'test'
        asset_name: YourAppName-Windows-Installer-v${{ github.run_number }}.exe # 👈 修改文件名以匹配版本
        asset_content_type: application/octet-stream